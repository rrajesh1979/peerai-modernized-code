# Spring Boot Application Configuration
spring:
  application:
    name: project-management-system
  
  # MongoDB Configuration
  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb://localhost:27017/project_management}
      database: ${MONGODB_DATABASE:project_management}
      auto-index-creation: true
      uuid-representation: standard
  
  # Jackson Configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false
    default-property-inclusion: non_null
    time-zone: UTC
    date-format: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
  
  # Security Configuration
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI:http://localhost:8080}
          jwk-set-uri: ${JWT_JWK_SET_URI:http://localhost:8080/.well-known/jwks.json}
  
  # Cache Configuration
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=1000,expireAfterWrite=600s
    cache-names:
      - users
      - organizations
      - projects
      - tasks
      - documents
  
  # Servlet Configuration
  servlet:
    multipart:
      enabled: true
      max-file-size: 50MB
      max-request-size: 50MB
      file-size-threshold: 2KB
  
  # Thread Pool Configuration
  task:
    execution:
      pool:
        core-size: 10
        max-size: 50
        queue-capacity: 100
        keep-alive: 60s
      thread-name-prefix: async-task-
    scheduling:
      pool:
        size: 5
      thread-name-prefix: scheduled-task-

# Server Configuration
server:
  port: ${SERVER_PORT:8080}
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: on_param
    include-exception: false
  servlet:
    context-path: /api
    session:
      timeout: 30m
      cookie:
        http-only: true
        secure: ${COOKIE_SECURE:false}
        same-site: strict

# Management & Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,loggers
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      probes:
        enabled: true
    metrics:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
    tags:
      application: ${spring.application.name}
  health:
    mongo:
      enabled: true
    diskspace:
      enabled: true

# Logging Configuration
logging:
  level:
    root: INFO
    com.projectmanagement: ${LOG_LEVEL:DEBUG}
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.springframework.data.mongodb: INFO
    org.mongodb.driver: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE:logs/application.log}
    max-size: 10MB
    max-history: 30
    total-size-cap: 1GB

# Application Specific Configuration
application:
  # JWT Configuration
  jwt:
    secret: ${JWT_SECRET:your-256-bit-secret-key-change-this-in-production}
    expiration: ${JWT_EXPIRATION:86400000} # 24 hours in milliseconds
    refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000} # 7 days in milliseconds
    issuer: ${JWT_ISSUER:project-management-system}
  
  # Security Configuration
  security:
    allowed-origins: ${ALLOWED_ORIGINS:http://localhost:3000,http://localhost:4200}
    password:
      min-length: 8
      require-uppercase: true
      require-lowercase: true
      require-digit: true
      require-special-char: true
    session:
      max-concurrent-sessions: 3
      prevent-login-if-max-exceeded: false
    mfa:
      enabled: ${MFA_ENABLED:false}
      issuer: ${MFA_ISSUER:ProjectManagementSystem}
  
  # File Storage Configuration
  storage:
    type: ${STORAGE_TYPE:local} # local, s3, azure
    local:
      base-path: ${STORAGE_LOCAL_PATH:./uploads}
    s3:
      bucket: ${S3_BUCKET:}
      region: ${S3_REGION:us-east-1}
      access-key: ${S3_ACCESS_KEY:}
      secret-key: ${S3_SECRET_KEY:}
    azure:
      connection-string: ${AZURE_STORAGE_CONNECTION_STRING:}
      container: ${AZURE_STORAGE_CONTAINER:}
    max-file-size: 52428800 # 50MB in bytes
    allowed-extensions:
      - pdf
      - doc
      - docx
      - xls
      - xlsx
      - ppt
      - pptx
      - txt
      - jpg
      - jpeg
      - png
      - gif
  
  # Email Configuration
  email:
    enabled: ${EMAIL_ENABLED:false}
    host: ${EMAIL_HOST:smtp.gmail.com}
    port: ${EMAIL_PORT:587}
    username: ${EMAIL_USERNAME:}
    password: ${EMAIL_PASSWORD:}
    from: ${EMAIL_FROM:noreply@projectmanagement.com}
    from-name: ${EMAIL_FROM_NAME:Project Management System}
    protocol: smtp
    smtp:
      auth: true
      starttls:
        enable: true
        required: true
    templates:
      base-path: classpath:/templates/email/
  
  # Pagination Configuration
  pagination:
    default-page-size: 20
    max-page-size: 100
  
  # Rate Limiting Configuration
  rate-limit:
    enabled: ${RATE_LIMIT_ENABLED:true}
    requests-per-minute: ${RATE_LIMIT_RPM:60}
    requests-per-hour: ${RATE_LIMIT_RPH:1000}
  
  # Audit Configuration
  audit:
    enabled: true
    retention-days: 90
    log-request-body: false
    log-response-body: false
  
  # Feature Flags
  features:
    user-registration: ${FEATURE_USER_REGISTRATION:true}
    social-login: ${FEATURE_SOCIAL_LOGIN:false}
    document-versioning: ${FEATURE_DOCUMENT_VERSIONING:true}
    task-comments: ${FEATURE_TASK_COMMENTS:true}
    notifications: ${FEATURE_NOTIFICATIONS:true}
    analytics: ${FEATURE_ANALYTICS:true}
  
  # Integration Configuration
  integrations:
    slack:
      enabled: ${SLACK_ENABLED:false}
      webhook-url: ${SLACK_WEBHOOK_URL:}
      bot-token: ${SLACK_BOT_TOKEN:}
    jira:
      enabled: ${JIRA_ENABLED:false}
      base-url: ${JIRA_BASE_URL:}
      username: ${JIRA_USERNAME:}
      api-token: ${JIRA_API_TOKEN:}
    github:
      enabled: ${GITHUB_ENABLED:false}
      client-id: ${GITHUB_CLIENT_ID:}
      client-secret: ${GITHUB_CLIENT_SECRET:}
  
  # Monitoring Configuration
  monitoring:
    performance:
      slow-query-threshold-ms: 1000
      slow-request-threshold-ms: 3000
    alerts:
      enabled: ${ALERTS_ENABLED:false}
      webhook-url: ${ALERTS_WEBHOOK_URL:}

# Springdoc OpenAPI Configuration
springdoc:
  api-docs:
    path: /api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    operations-sorter: method
    tags-sorter: alpha
    display-request-duration: true
    doc-expansion: none
  show-actuator: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

# CORS Configuration
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:4200}
  allowed-methods: GET,POST,PUT,DELETE,PATCH,OPTIONS
  allowed-headers: "*"
  exposed-headers: Authorization,Content-Disposition
  allow-credentials: true
  max-age: 3600